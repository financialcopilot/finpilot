import React, { useContext } from 'react';
import { AppContext } from '../../context/AppContext';
import { Box, Typography, Paper, CircularProgress, Tooltip, Chip, Stack } from '@mui/material';
import CheckCircleIcon from '@mui/icons-material/CheckCircle';
import CancelIcon from '@mui/icons-material/Cancel';
import HelpOutlineIcon from '@mui/icons-material/HelpOutline';

const EvaluationDisplay = () => {
  const { isEvaluating, evaluationResult } = useContext(AppContext);

  if (isEvaluating) {
    return (
      <Paper elevation={3} sx={{ p: 3, mt: 4, textAlign: 'center' }}>
        <CircularProgress size={24} sx={{mr: 2}} />
        <Typography variant="body1" component="span" color="text.secondary">
          Analyzing plan quality...
        </Typography>
      </Paper>
    );
  }

  if (!evaluationResult) {
    return null;
  }

  const { golden_principle_checks, ai_evaluation } = evaluationResult;

  return (
    <Paper elevation={3} sx={{ p: 3, mt: 4 }}>
      <Typography variant="h5" gutterBottom sx={{display: 'flex', alignItems: 'center'}}>
        Plan Confidence Score
        <Tooltip title="This score is generated by a separate AI agent that acts as an impartial judge, evaluating the quality and personalization of your financial plan.">
            <HelpOutlineIcon fontSize="small" sx={{ ml: 1, color: 'text.secondary' }} />
        </Tooltip>
      </Typography>
      
      <Box mb={3}>
        <Typography variant="h4" component="span" color="primary.main" sx={{ fontWeight: 'bold' }}>
          {ai_evaluation.final_verdict.overall_score} / 10
        </Typography>
        <Typography variant="body1" color="text.secondary" sx={{ fontStyle: 'italic', mt: 1 }}>
          "{ai_evaluation.final_verdict.summary}"
        </Typography>
      </Box>

      <Box>
        <Typography variant="h6" gutterBottom>
          Objective Checks
        </Typography>
        <Stack direction="row" spacing={1}>
          <Tooltip title={ai_evaluation.golden_principle_reasoning.debt_priority_check}>
            <Chip
              icon={golden_principle_checks.debt_priority_check ? <CheckCircleIcon /> : <CancelIcon />}
              label="Debt Prioritized"
              color={golden_principle_checks.debt_priority_check ? "success" : "error"}
              variant="outlined"
            />
          </Tooltip>
          <Tooltip title={ai_evaluation.golden_principle_reasoning.risk_profile_alignment_check}>
            <Chip
              icon={golden_principle_checks.risk_profile_alignment_check ? <CheckCircleIcon /> : <CancelIcon />}
              label="Risk Aligned"
              color={golden_principle_checks.risk_profile_alignment_check ? "success" : "error"}
              variant="outlined"
            />
          </Tooltip>
        </Stack>
      </Box>
    </Paper>
  );
};

export default EvaluationDisplay;